/*
问题描述
一个整数如果由相同数字构成，可以称为完美整数；比如说1、11、333就是完美整数，12、19、101就是不完美的整数。
现在想知道，在区间 [x, y] 中有多少个整数是完美整数。

输入格式
每个样例有一行，是整数 x 和 y；（1 ≤ x ≤ y ≤ 10^9）

输出格式
每一个样例一行，是整数 m，表示区间 [x, y] 中有 m 个整数是完美整数。

输入样例1
1 10

输出样例1
9

输入样例2
2 22

输出样例2
10

数据范围
1 ≤ t ≤ 1000
1 ≤ x ≤ y ≤ 10^9
*/
#include <iostream>
#include <vector>

int solution(int x, int y) {
    int count = 0;
    for (int n = x; n <= y; n++) {
        int digit = n % 10;  // 获取最后一位数字
        int temp = n;
        bool isPerfect = true;
        
        // 检查所有位数是否相同
        while (temp > 0) {
            if (temp % 10 != digit) {
                isPerfect = false;
                break;
            }
            temp /= 10;
        }
        
        if (isPerfect) {
            count++;
        }
    }
    return count;
}

int main() {
    // Add your test cases here
    std::cout << (solution(1, 10) == 9) << std::endl;
    std::cout << (solution(2, 22) == 10) << std::endl;

    return 0;
}
